;[uwsgi]
;
;project=tool
;uid=www-data
;gid=www-data
;base=/var/www/html
;
;chdir=%(base)/%(project)
;module=%(project).wsgi:application
;master=True
;processes=2
;
;socket=0.0.0.0:8000
;chown-socket=%(uid):www-data
;chmod-socket=664
;
;vacuum=True
;max-requests=5000
;
;pidfile=/tmp/%(project)-master.pid
;daemonize=/tmp/%(project)-uwsgi.log
;
;#设置一个请求的超时时间(秒)，如果一个请求超过了这个时间，则请求被丢弃
;harakiri = 60
;post buffering = 8192
;buffer-size= 65535
;#当一个请求被harakiri杀掉会，会输出一条日志
;harakiri-verbose = true
;
;#开启内存使用情况报告
;memory-report = true
;
;#设置平滑的重启（直到处理完接收到的请求）的长等待时间(秒)
;reload-mercy = 10
;
;#设置工作进程使用虚拟内存超过N MB就回收重启
;reload-on-as= 1024

[uwsgi]
http-timeout = 86400

# Django项目的根目录
chdir = /app

# Django的wsgi应用程序模块
module = ImageProject.wsgi:application

# uWSGI将使用的进程数量
processes = 4

# 允许主进程重加载应用程序
master = true

# 静态文件目录
static-map = /static=/app/static

# Django静态文件的存储路径
static-map = /media=/app/media

# 允许uwsgi处理的最大请求量
max-requests = 5000

# uWSGI将监听的套接字
socket = :8000

# uWSGI使用的协议类型
protocol = http

daemonize = /logs/uwsgi.log
